#summary A list of known issues for the review starting June 09, 2008.

= Introduction =

This is a list of the known classes of security issues going into the review starting June 09, 2008.

= Details =

Issue 242. The native =Function.prototype.bind()= is available to Caja code. If Caja code can obtain a reference to an untamed function object, =bind()= can be used to call the function.

Issue 406. Returning a value from a constructor differs in cajoled versus uncajoled mode. _So far, this appears to be safe, since it is merely the newly created object._

Issue 347. Caja code can detect the presence or absence of "unmentionable" properties in a target object by use of the =in= construct.

Issue 342. Caja code cannot declare a class "=final=". The protected variables of a Caja class are visible to its subclasses. Hence, if a Caja constructor closes over some authority and makes that available via its protected (but not public) interface, anyone with access to the constructor may gain access to that authority.

Issue 343. Caja subclasses are not required to call their superclass initializer (which would be done by invoking _ctor_.=super()=). Thus it is possible, via subclassing, to obtain a copy of a superclass with its fields un-initialized. This is benign unless the superclass methods close over some authority, in which case they can be confused into using that authority unwisely.

Issue 63. Form submission hooks may be circumvented by EventChecksCircumventableByInfLoops.