#labels Attack-Vector
=Object.toSource and uneval allow access to private fields=

==Effect==
Untrusted code that can reference an object can get access to private fields by s
erializing it using uneval and then parsing the resulting string.



==Background==
Object.toSource and uneval are non-standard members of Object.


==Assumptions==
uneval and Object.toSource are accessible to untrusted code.


==Versions==
Firefox and possibly others.


==Example==
{{{
// Untrusted code
function untrusted(o) {
  // untrusted need not attempt to access private_ directly
  var privateValue = o.toSource().match(/private_:\s*(\d+)/)[1] * 1;
  alert('private value is ' + privateValue);
}

var o = { private_: 4 }
untrusted(o);
}}}